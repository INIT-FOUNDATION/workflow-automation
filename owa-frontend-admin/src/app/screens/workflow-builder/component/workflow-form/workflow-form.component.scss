@import "../../../../../../node_modules/drawflow/dist/drawflow.min.css";

.custom-workflow-height {
  height: calc(100vh - 14rem);
}

#drawflow {
  background: var(--background-color);
  background-size: 25px 25px;
  background-image: linear-gradient(to right, #f1f1f1 1px, transparent 1px),
    linear-gradient(to bottom, #f1f1f1 1px, transparent 1px);
}

@media only screen and (max-width: 768px) {
  #drawflow {
    width: calc(100vw - 51px);
  }
}

::ng-deep .drawflow {
  width: auto;
}

::ng-deep .drawflow .drawflow-node {
  background-color: #fff !important;
  width: 15rem !important;
  padding: 0rem;
  border: 1px solid #f2f2f2;
  border-radius: 0.5rem;
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color),
    0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

::ng-deep .drawflow .drawflow-node .input,
::ng-deep .drawflow .drawflow-node .output {
  height: 0.7rem !important;
  width: 0.7rem !important;
  border: 2px solid var(--border-color);
}

::ng-deep .drawflow .drawflow-node .input:hover,
.drawflow .drawflow-node .output:hover {
  background: red;
}

::ng-deep .drawflow .drawflow-node .output {
  right: 2rem;
  background: green;
  top: 3rem;
}

::ng-deep .drawflow .drawflow-node .input {
  left: -10px;
  background: white;
  border: 1px solid #dcdcdc;
}

::ng-deep .drawflow .Decision .output {
  right: 0.3rem;
  top: unset;
}

::ng-deep .drawflow .End .bg-green-200 {
  display: none;
}
